package com.teamarte.arte;import android.app.Application;import android.app.NotificationChannel;import android.app.NotificationManager;import android.content.Context;import android.os.Build;import androidx.annotation.NonNull;import androidx.lifecycle.Lifecycle;import androidx.lifecycle.LifecycleObserver;import androidx.lifecycle.OnLifecycleEvent;import com.cloudinary.android.MediaManager;import java.util.HashMap;import java.util.Map;import timber.log.Timber;public class App extends Application {    private static Context context;    @Override    public void onCreate (){        super.onCreate();        this.context = this;        if (BuildConfig.DEBUG) {            Timber.plant(new Timber.DebugTree());        }        HashMap<String, String> config = new HashMap<>();        config.put("cloud_name", "kermakaze-inc");        config.put("api_key", "384418681658586");        config.put("api_secret", "7GUyBJ0TjCnJBZSgh94ytm516esY");        MediaManager.init(this, config);        createNotificationChannel();    }    public static Context getContext() {        return context;    }    private void createNotificationChannel() {        // Create the NotificationChannel, but only on API 26+ because        // the NotificationChannel class is new and not in the support library        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {            CharSequence name = "Message Notifications";            String description = "Notifications for messages";            int importance = NotificationManager.IMPORTANCE_HIGH;            NotificationChannel channel = new NotificationChannel(AppConstants.MESSAGE_CHANNEL, name, NotificationManager.IMPORTANCE_HIGH);            channel.setDescription(description);            // Register the channel with the system; you can't change the importance            // or other notification behaviors after this            NotificationManager notificationManager = getSystemService(NotificationManager.class);            notificationManager.createNotificationChannel(channel);        }    }}